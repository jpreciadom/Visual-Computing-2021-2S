<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Computing</title><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/</link><description>Recent content on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Algoritmo_de_bresenham/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Algoritmo_de_bresenham/</guid><description>Algoritmo de dibujo del círculo de Bresenham # El algoritmo inicialmente fue desarrollado por Jack Elton Bresenham al comienzo del verano de 1962, para dibujar sobre un plóter de Calcomp, operado desde un IBM. Por aquella época era común compartir libremente los programas, y en la empresa era normal que otros compañeros dispusieran de copias. No fue el propio Bresenham quien publicó su algoritmo, sino otros que le pidieron permiso para presentarlo en su nombre en la convención nacional de ACM, en Denver (Colorado) en 1963.</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Algoritmo_de_warnock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Algoritmo_de_warnock/</guid><description>Algoritmo de Warnock (Algoritmo de subdivisión de área) # Hoy hablaremos de un algoritmo de visibilidad desarrollado por el científico de la computación John Warnock. Este algoritmo tiene como principal objetivo determinar las superficies ocultas en una imagen compleja para poder ilustrarla.
Warnock utilizó el método de divide y vencerás dividiendo la escena en 4 partes iguales dependiendo de ciertos criterios (que veremos después en la sección de explicación del algoritmo)para resolver este problema de forma recursiva.</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Fotomosaico/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Fotomosaico/</guid><description>Fotomosaico # ¿Que és un fotomosaico? # En el campo de las imágenes y la fotografía, un fotomosaico es una imagen usualmente una fotografía que ha sido dividida en secciones rectangulares (usualmente del mismo tamaño), tal como es compuesto un mosaico tradicional, con la característica de que cada elemento del mosaico es reemplazado por otra fotografía con colores promedios apropiados al elemento de la imagen original. Cuando es vista en detalle, los píxeles individuales se ven como la imagen principal, sin embargo al verla como un todo, es posible apreciar que la imagen está compuesta por cientos de miles de imágenes.</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Ilusiones_%C3%B3pticas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Ilusiones_%C3%B3pticas/</guid><description>Ilusión de Zollner # Bastan unas pocas líneas para confundirnos. Como en esta ilusión descubierta por el astrofísico alemán Johann Karl Friedrich Zöllner en 1860. A pesar de que estas rectas son paralelas, parecen inclinarse por influencia de las líneas diagonales. Existen diferentes variaciones como el grosor de las líneas, la distancia entre las rectas paralelas e incluso el ángulo de las líneas pequeñas. Aún con estas variantes la ilusión sigue siendo efectiva.</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/integrantes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/integrantes/</guid><description>Integrantes # En esta página se encontrará la información de los integrantes del grupo.
Francisco Javier Bernal Caro # Expand ↕ Francisco Javier Bernal Caro Estudiante de ingeniería de sistemas de la Universidad Nacional de Colombia. Tengo 22 años, me interesan temas como Machine Learning, desarrollo web y desarrollo de aplicaciones móviles. Juan Diego Preciado Mahecha # Expand ↕ Juan Diego Preciado Mahecha Estudiante de cuarto año de ingeniería de sistemas de la Univerisdad Nacional de Colombia.</description></item></channel></rss>