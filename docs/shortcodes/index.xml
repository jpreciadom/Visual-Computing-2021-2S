<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Computing</title><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/</link><description>Recent content on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/buttons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/buttons/</guid><description>Buttons # Buttons are styled links that can lead to local page or external link.
Example # {{&amp;lt; button relref=&amp;#34;/&amp;#34; [class=&amp;#34;...&amp;#34;] &amp;gt;}}Get Home{{&amp;lt; /button &amp;gt;}} {{&amp;lt; button href=&amp;#34;https://github.com/alex-shpak/hugo-book&amp;#34; &amp;gt;}}Contribute{{&amp;lt; /button &amp;gt;}} Get Home Contribute</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/columns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/columns/</guid><description>Columns # Columns help organize shorter pieces of content horizontally for readability.
{{&amp;lt; columns &amp;gt;}} &amp;lt;!-- begin columns block --&amp;gt; # Left Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Mid Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Right Content Lorem markdownum insigne... {{&amp;lt; /columns &amp;gt;}} Example # Left Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/details/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/details/</guid><description>Details # Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.
Example # {{&amp;lt; details &amp;#34;Title&amp;#34; [open] &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /details &amp;gt;}} {{&amp;lt; details title=&amp;#34;Title&amp;#34; open=true &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /details &amp;gt;}} Title Markdown content # Lorem markdownum insigne&amp;hellip;</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/expand/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/expand/</guid><description>Expand # Expand shortcode can help to decrease clutter on screen by hiding part of text. Expand content by clicking on it.
Example # Default # {{&amp;lt; expand &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /expand &amp;gt;}} Expand ↕ Markdown content Lorem markdownum insigne&amp;hellip; With Custom Label # {{&amp;lt; expand &amp;#34;Custom Label&amp;#34; &amp;#34;...&amp;#34; &amp;gt;}} ## Markdown content Lorem markdownum insigne.</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/hints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/hints/</guid><description>Hints # Hint shortcode can be used as hint/alerts/notification block.
There are 3 colors to choose: info, warning and danger.
{{&amp;lt; hint [info|warning|danger] &amp;gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{&amp;lt; /hint &amp;gt;}} Example # Markdown content
Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa Markdown content</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/katex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/katex/</guid><description>KaTeX # KaTeX shortcode let you render math typesetting in markdown document. See KaTeX
Example # {{&amp;lt; katex [display] [class=&amp;#34;text-center&amp;#34;] &amp;gt;}} f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi {{&amp;lt; /katex &amp;gt;}} \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\] Display Mode Example # Here is some inline example: \(\pi(x)\) , rendered in the same line. And below is display example, having display: block \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\] Text continues here.</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/mermaid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/mermaid/</guid><description>Mermaid Chart # MermaidJS is library for generating svg charts and diagrams from text.
Override Mermaid Initialization Config
To override the initialization config for Mermaid, create a mermaid.json file in your assets folder!
Example # {{&amp;lt; mermaid [class=&amp;#34;text-center&amp;#34;]&amp;gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --&amp;gt; State2 note left of State2 : This is the note to the left.</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/tabs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/tabs/</guid><description>Tabs # Tabs let you organize content by context, for example installation instructions for each supported platform.
{{&amp;lt; tabs &amp;#34;uniqueid&amp;#34; &amp;gt;}} {{&amp;lt; tab &amp;#34;MacOS&amp;#34; &amp;gt;}} # MacOS Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Linux&amp;#34; &amp;gt;}} # Linux Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Windows&amp;#34; &amp;gt;}} # Windows Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; /tabs &amp;gt;}} Example # MacOS MacOS # This is tab MacOS content.
Lorem markdownum insigne. Olympo signis Delphis!</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/algoritmo_warnock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/algoritmo_warnock/</guid><description>Algoritmo de Warnock (Algoritmo de subdivisión de área) # Hoy hablaremos de un algoritmo de visibilidad desarrollado por el científico de la computación John Warnock. Este algoritmo tiene como principal objetivo determinar las superficies ocultas en una imagen compleja para poder ilustrarla.
Warnock utilizó el método de divide y vencerás dividiendo la escena en 4 partes iguales dependiendo de ciertos criterios (que veremos después en la sección de explicación del algoritmo)para resolver este problema de forma recursiva.</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Bresenham/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Bresenham/</guid><description>Bresenham’s circle drawing algorithm # Bresenham’s algorithms uses the key feature of circle that it is highly symmetric. So, for whole 360 degree of circle we will divide it in 8-parts each octant of 45 degree. In order to do that we will use Bresenham’s Circle Algorithm for calculation of the locations of the pixels in the first octant of 45 degrees. It assumes that the circle is centered on the origin.</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/ilusiones/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/ilusiones/</guid><description>Ilusión de Zollner # Bastan unas pocas líneas para confundirnos. Como en esta ilusión descubierta por el astrofísico alemán Johann Karl Friedrich Zöllner en 1860. A pesar de que estas rectas son paralelas, parecen inclinarse por influencia de las líneas diagonales. Existen diferentes variaciones como el grosor de las líneas, la distancia entre las rectas paralelas e incluso el ángulo de las líneas pequeñas. Aún con estas variantes la ilusión sigue siendo efectiva.</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/integrantes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/integrantes/</guid><description>Integrantes # En esta página se encontrará la información de los integrantes del grupo.
Francisco Javier Bernal Caro # Expand ↕ Francisco Javier Bernal Caro Estudiante de ingeniería de sistemas de la Universidad Nacional de Colombia. Tengo 22 años, me interesan temas como Machine Learning, desarrollo web y desarrollo de aplicaciones móviles. Juan Diego Preciado Mahecha # Expand ↕ Juan Diego Preciado Mahecha Estudiante de cuarto año de ingeniería de sistemas de la Univerisdad Nacional de Colombia.</description></item></channel></rss>