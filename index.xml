<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Visual Computing</title><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/</link><description>Recent content in Introduction on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jpreciadom.github.io/Visual-Computing-2021-2S/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Algoritmo_de_bresenham/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Algoritmo_de_bresenham/</guid><description>Algoritmo de dibujo del círculo de Bresenham # El algoritmo inicialmente fue desarrollado por Jack Elton Bresenham al comienzo del verano de 1962, para dibujar sobre un plóter de Calcomp, operado desde un IBM. Por aquella época era común compartir libremente los programas, y en la empresa era normal que otros compañeros dispusieran de copias. No fue el propio Bresenham quien publicó su algoritmo, sino otros que le pidieron permiso para presentarlo en su nombre en la convención nacional de ACM, en Denver (Colorado) en 1963.</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Algoritmo_de_warnock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Algoritmo_de_warnock/</guid><description>Algoritmo de Warnock (Algoritmo de subdivisión de área) # Hoy hablaremos de un algoritmo de visibilidad desarrollado por el científico de la computación John Warnock. Este algoritmo tiene como principal objetivo determinar las superficies ocultas en una imagen compleja para poder ilustrarla.
Warnock utilizó el método de divide y vencerás dividiendo la escena en 4 partes iguales dependiendo de ciertos criterios (que veremos después en la sección de explicación del algoritmo)para resolver este problema de forma recursiva.</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Fotomosaico/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Fotomosaico/</guid><description>Fotomosaico # ¿Que és un fotomosaico? # En el campo de las imágenes y la fotografía, un fotomosaico es una imagen usualmente una fotografía que ha sido dividida en secciones rectangulares (usualmente del mismo tamaño), tal como es compuesto un mosaico tradicional, con la característica de que cada elemento del mosaico es reemplazado por otra fotografía con colores promedios apropiados al elemento de la imagen original. Cuando es vista en detalle, los píxeles individuales se ven como la imagen principal, sin embargo al verla como un todo, es posible apreciar que la imagen está compuesta por cientos de miles de imágenes.</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Ilusiones_%C3%B3pticas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/Ilusiones_%C3%B3pticas/</guid><description>Ilusión de Zollner # Bastan unas pocas líneas para confundirnos. Como en esta ilusión descubierta por el astrofísico alemán Johann Karl Friedrich Zöllner en 1860. A pesar de que estas rectas son paralelas, parecen inclinarse por influencia de las líneas diagonales. Existen diferentes variaciones como el grosor de las líneas, la distancia entre las rectas paralelas e incluso el ángulo de las líneas pequeñas. Aún con estas variantes la ilusión sigue siendo efectiva.</description></item><item><title/><link>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/integrantes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jpreciadom.github.io/Visual-Computing-2021-2S/docs/shortcodes/Team/integrantes/</guid><description>Integrantes # En esta página se encontrará la información de los integrantes del grupo.
Francisco Javier Bernal Caro # Expand ↕ Francisco Javier Bernal Caro Estudiante de ingeniería de sistemas de la Universidad Nacional de Colombia. Tengo 22 años, me interesan temas como Machine Learning, desarrollo web y desarrollo de aplicaciones móviles. Juan Diego Preciado Mahecha # Expand ↕ Juan Diego Preciado Mahecha Estudiante de cuarto año de ingeniería de sistemas de la Univerisdad Nacional de Colombia.</description></item></channel></rss>